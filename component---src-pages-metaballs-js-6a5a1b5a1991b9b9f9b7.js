(self.webpackChunkgatsby_starter_blog=self.webpackChunkgatsby_starter_blog||[]).push([[797],{3445:function(){var n=document.createElement("canvas"),a=n.width=.75*window.innerWidth,r=n.height=.75*window.innerHeight;document.body.prepend(n);var t=n.getContext("webgl");t.clearColor(100,100,100,1);for(var e={x:0,y:0},o=10,i=[],l=0;l<o;l++){var d=60*Math.random()+10;i.push({x:Math.random()*(a-2*d)+d,y:Math.random()*(r-2*d)+d,vx:1*(Math.random()-.5),vy:1*(Math.random()-.5),r:.75*d})}var f="\nprecision highp float;\n\nconst float WIDTH = "+(a>>0)+".0;\nconst float HEIGHT = "+(r>>0)+".0;\n\nuniform vec3 metaballs["+"10];\n\nvoid main(){\nfloat x = gl_FragCoord.x;\nfloat y = gl_FragCoord.y;\n\nfloat sum = 0.0;\nfor (int i = 0; i < "+"10; i++) {\nvec3 metaball = metaballs[i];\nfloat dx = metaball.x - x;\nfloat dy = metaball.y - y;\nfloat radius = metaball.z;\n\nsum += (radius * radius) / (dx * dx + dy * dy);\n}\n\nif (sum >= 0.99) {\ngl_FragColor = vec4(mix(vec3(x / WIDTH, y / HEIGHT, 1.0), vec3(0, 0, 0), max(0.0, 1.0 - (sum - 0.99) * 100.0)), 1.0);\nreturn;\n}\n\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n\n",c=g("\nattribute vec2 position;\n\nvoid main() {\n// position specifies only x and y.\n// We set z to be 0.0, and w to be 1.0\ngl_Position = vec4(position, 0.0, 1.0);\n}\n",t.VERTEX_SHADER),m=g(f,t.FRAGMENT_SHADER),s=t.createProgram();t.attachShader(s,c),t.attachShader(s,m),t.linkProgram(s),t.useProgram(s);var u=new Float32Array([-1,1,-1,-1,1,1,1,-1]),v=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,v),t.bufferData(t.ARRAY_BUFFER,u,t.STATIC_DRAW);var h=function(n,a){var r=t.getAttribLocation(n,a);if(-1===r)throw"Can not find attribute "+a+".";return r}(s,"position");t.enableVertexAttribArray(h),t.vertexAttribPointer(h,2,t.FLOAT,t.FALSE,8,0);var y=function(n,a){var r=t.getUniformLocation(n,a);if(-1===r)throw"Can not find uniform "+a+".";return r}(s,"metaballs");function g(n,a){var r=t.createShader(a);if(t.shaderSource(r,n),t.compileShader(r),!t.getShaderParameter(r,t.COMPILE_STATUS))throw"Shader compile failed with: "+t.getShaderInfoLog(r);return r}!function n(){for(var e=0;e<o;e++){var l=i[e];l.x+=l.vx,l.y+=l.vy,(l.x<l.r||l.x>a-l.r)&&(l.vx*=-1),(l.y<l.r||l.y>r-l.r)&&(l.vy*=-1)}var d=new Float32Array(30);for(e=0;e<o;e++){var f=3*e,c=i[e];d[f+0]=c.x,d[f+1]=c.y,d[f+2]=c.r}t.uniform3fv(y,d),t.drawArrays(t.TRIANGLE_STRIP,0,4),requestAnimationFrame(n)}(),n.onmousemove=function(n){e.x=n.clientX,e.y=n.clientY}}}]);
//# sourceMappingURL=component---src-pages-metaballs-js-6a5a1b5a1991b9b9f9b7.js.map