{"version":3,"file":"component---src-pages-metaballs-js-6a5a1b5a1991b9b9f9b7.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/metaballs.js"],"sourcesContent":["var canvas = document.createElement(\"canvas\");\r\nvar width = canvas.width = window.innerWidth * 0.75;\r\nvar height = canvas.height = window.innerHeight * 0.75;\r\ndocument.body.prepend(canvas);\r\n\r\ndebugger;\r\nvar gl = canvas.getContext('webgl');\r\n// Set the background color of canvas\r\ngl.clearColor(100,100,100,1)\r\nvar mouse = {x: 0, y: 0};\r\n\r\nvar numMetaballs = 10;\r\nvar metaballs = [];\r\n\r\nfor (var i = 0; i < numMetaballs; i++) {\r\n  var radius = Math.random() * 60 + 10;\r\n  metaballs.push({\r\n    x: Math.random() * (width - 2 * radius) + radius,\r\n    y: Math.random() * (height - 2 * radius) + radius,\r\n    vx: (Math.random() - 0.5) * 1,\r\n    vy: (Math.random() - 0.5) * 1,\r\n    r: radius * 0.75\r\n  });\r\n}\r\n\r\nvar vertexShaderSrc = `\r\nattribute vec2 position;\r\n\r\nvoid main() {\r\n// position specifies only x and y.\r\n// We set z to be 0.0, and w to be 1.0\r\ngl_Position = vec4(position, 0.0, 1.0);\r\n}\r\n`;\r\n\r\nvar fragmentShaderSrc = `\r\nprecision highp float;\r\n\r\nconst float WIDTH = ` + (width >> 0) + `.0;\r\nconst float HEIGHT = ` + (height >> 0) + `.0;\r\n\r\nuniform vec3 metaballs[` + numMetaballs + `];\r\n\r\nvoid main(){\r\nfloat x = gl_FragCoord.x;\r\nfloat y = gl_FragCoord.y;\r\n\r\nfloat sum = 0.0;\r\nfor (int i = 0; i < ` + numMetaballs + `; i++) {\r\nvec3 metaball = metaballs[i];\r\nfloat dx = metaball.x - x;\r\nfloat dy = metaball.y - y;\r\nfloat radius = metaball.z;\r\n\r\nsum += (radius * radius) / (dx * dx + dy * dy);\r\n}\r\n\r\nif (sum >= 0.99) {\r\ngl_FragColor = vec4(mix(vec3(x / WIDTH, y / HEIGHT, 1.0), vec3(0, 0, 0), max(0.0, 1.0 - (sum - 0.99) * 100.0)), 1.0);\r\nreturn;\r\n}\r\n\r\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\r\n}\r\n\r\n`;\r\n\r\nvar vertexShader = compileShader(vertexShaderSrc, gl.VERTEX_SHADER);\r\nvar fragmentShader = compileShader(fragmentShaderSrc, gl.FRAGMENT_SHADER);\r\n\r\nvar program = gl.createProgram();\r\ngl.attachShader(program, vertexShader);\r\ngl.attachShader(program, fragmentShader);\r\ngl.linkProgram(program);\r\ngl.useProgram(program);\r\n\r\nvar vertexData = new Float32Array([\r\n  -1.0,  1.0, // top left\r\n  -1.0, -1.0, // bottom left\r\n  1.0,  1.0, // top right\r\n  1.0, -1.0, // bottom right\r\n]);\r\nvar vertexDataBuffer = gl.createBuffer();\r\ngl.bindBuffer(gl.ARRAY_BUFFER, vertexDataBuffer);\r\ngl.bufferData(gl.ARRAY_BUFFER, vertexData, gl.STATIC_DRAW);\r\n\r\nvar positionHandle = getAttribLocation(program, 'position');\r\ngl.enableVertexAttribArray(positionHandle);\r\ngl.vertexAttribPointer(positionHandle,\r\n                       2, // position is a vec2\r\n                       gl.FLOAT, // each component is a float\r\n                       gl.FALSE, // don't normalize values\r\n                       2 * 4, // two 4 byte float components per vertex\r\n                       0 // offset into each span of vertex data\r\n                      );\r\n\r\nvar metaballsHandle = getUniformLocation(program, 'metaballs');\r\n\r\nloop();\r\nfunction loop() {\r\n  for (var i = 0; i < numMetaballs; i++) {\r\n    var metaball = metaballs[i];\r\n    metaball.x += metaball.vx;\r\n    metaball.y += metaball.vy;\r\n\r\n    if (metaball.x < metaball.r || metaball.x > width - metaball.r) metaball.vx *= -1;\r\n    if (metaball.y < metaball.r || metaball.y > height - metaball.r) metaball.vy *= -1;\r\n  }\r\n\r\n  var dataToSendToGPU = new Float32Array(3 * numMetaballs);\r\n  for (var i = 0; i < numMetaballs; i++) {\r\n    var baseIndex = 3 * i;\r\n    var mb = metaballs[i];\r\n    dataToSendToGPU[baseIndex + 0] = mb.x;\r\n    dataToSendToGPU[baseIndex + 1] = mb.y;\r\n    dataToSendToGPU[baseIndex + 2] = mb.r;\r\n  }\r\n  gl.uniform3fv(metaballsHandle, dataToSendToGPU);\r\n  \r\n  //Draw\r\n  gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n\r\n  requestAnimationFrame(loop);\r\n}\r\n\r\nfunction compileShader(shaderSource, shaderType) {\r\n  var shader = gl.createShader(shaderType);\r\n  gl.shaderSource(shader, shaderSource);\r\n  gl.compileShader(shader);\r\n\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    throw \"Shader compile failed with: \" + gl.getShaderInfoLog(shader);\r\n  }\r\n\r\n  return shader;\r\n}\r\n\r\nfunction getUniformLocation(program, name) {\r\n  var uniformLocation = gl.getUniformLocation(program, name);\r\n  if (uniformLocation === -1) {\r\n    throw 'Can not find uniform ' + name + '.';\r\n  }\r\n  return uniformLocation;\r\n}\r\n\r\nfunction getAttribLocation(program, name) {\r\n  var attributeLocation = gl.getAttribLocation(program, name);\r\n  if (attributeLocation === -1) {\r\n    throw 'Can not find attribute ' + name + '.';\r\n  }\r\n  return attributeLocation;\r\n}\r\n\r\ncanvas.onmousemove = function(e) {\r\n  mouse.x = e.clientX;\r\n  mouse.y = e.clientY;\r\n}"],"names":["canvas","document","createElement","width","window","innerWidth","height","innerHeight","body","prepend","gl","getContext","clearColor","mouse","x","y","numMetaballs","metaballs","i","radius","Math","random","push","vx","vy","r","fragmentShaderSrc","vertexShader","compileShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","useProgram","vertexData","Float32Array","vertexDataBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","positionHandle","name","attributeLocation","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","FALSE","metaballsHandle","uniformLocation","getUniformLocation","shaderSource","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","loop","metaball","dataToSendToGPU","baseIndex","mb","uniform3fv","drawArrays","TRIANGLE_STRIP","requestAnimationFrame","onmousemove","e","clientX","clientY"],"sourceRoot":""}